\input texinfo
@c Author : Stephen Leake stephen_leake@acm.org
@c Web    : http://www.toadmail.com/~ada_wizard/
@setfilename books.info
@settitle Books database

@setchapternewpage off

@node Top, Development Environment, (dir), (dir)
@top Books

Books is a user interface to a database holding information on books,
stories and novels; their titles, authors, what collection or series
they belong to, how I rate them, etc.

This document is a design and user guide for the books program.

See Books/INSTALL for instructions on building the program.

Books is written in Ada, using the Gnu Ada tools, which don't need
autoconf and automake.

@menu
* Development Environment::
* Program design::
* Database schema::
@end menu

@node Debian Development Environment, Program design, Top, Top
@chapter Debian Development Environment

I follow the Debian Ada policy
@uref{http://people.debian.org/~lbrenta/debian-ada-policy.html,
http://people.debian.org/~lbrenta/debian-ada-policy.html,
http://people.debian.org/~lbrenta/debian-ada-policy.html}.

@multitable {Tool} {Version} {Source}
@item Tool @tab Version @tab Source
@item Debian Gnu/Linux  @tab 5.0 @tab Debian distro
@item GNAT @tab 4.3.3 @tab Debian package gnat
@item GtkAda @tab 2.2.0 @tab Debian package libgtkada2-dev
@item GNADE @tab 1.5.0 @tab Debian package libgnadesqlite-dev
@item SAL @tab 2.01 @tab @uref{http://stephe-leake.org/ada/sal.html}
@item Sqlite3 @tab 3.6.13-1 @tab Debian package sqlite3
@end multitable

Use Debian synaptic to install Debian packages.

@enumerate 1
@item
Unzip source, note location (for example, @file{/home/Projects/sal}).

@item
Define an environment variable giving location of SAL GNAT project
file @file{sal.gpr}: @*
@code{export SAL_GPR=/home/Projects/sal/build/x86_gnu_linux_release}.
This environment variable is used by the Books Makefile to set @var{ADA_PROJECT_PATH}.
@end enumerate

@node Windows Development Environment, Program design, Top, Top
@chapter Windows Development Environment

@multitable {Tool} {Version} {Source}
@item Tool @tab Version @tab Source
@item Windows @tab XP @tab
@item GNAT @tab 6.2.1 @tab AdaCore
@item GtkAda @tab 2.14.0 @tab @uref{http://libre.adacore.com/libre/}
@item GNADE @tab 1.5.3 @tab @uref{http://gnade.sourceforge.net/}
@item SAL @tab 2.01 @tab @uref{http://stephe-leake.org/ada/sal.html}
@item Sqlite3 @tab 3.6.13-1 @tab Debian package sqlite3
@end multitable

GtkAda installer offers to compile the library, but if the GNAT
compiler is not in your path, it silently fails. To compile:
@example
cd /Apps/GNAT-GPL_2009/GtkAda
gnatmake -P include/gtkada/gtkada_install_static
@end example

@enumerate 1
@item
Unzip source, note location (for example, @file{/home/Projects/sal}).

@item
Define an environment variable giving location of SAL GNAT project
file @file{sal.gpr}: @*
@code{export SAL_GPR=/home/Projects/sal/build/x86_gnu_linux_release}.
This environment variable is used by the Books Makefile to set @var{ADA_PROJECT_PATH}.
@end enumerate

@node Install application,  , Development Environment Installation, Development Environment
@chapter Install application
To run the database, we need to install MySQL and MyODBC, then create
the ODBC data source, the database user account, and the database. We
also need to compile the Books application.

@menu
* Install MySQL::
* Install MyODBC::
* Create database::
* Compile Books::
@end menu

@node Install MySQL, Install MyODBC, Install application, Install application
@subsection Install MySQL

@enumerate 1
@item
Unzip @file{mysql-4.0.15-win.zip} using WinZip or equivalent, to a
temp directory.

@item
Run @file{Setup.exe}, install to @file{C:/Apps/MySQL}

@item
Create file @file{c:/WINNT/my.ini}, with (edit paths to match your setup):
@verbatim
[mysqld]
basedir=C:/Apps/MySQL/
datadir=C:/Stephe/MySQL_Data/
@end verbatim

@end enumerate

@node Install MyODBC, Create database, Install MySQL, Install application
@subsection Install MyODBC
Install the MyODBC driver and configure the ODBC data source.
@enumerate 1
@item
Run @file{MyODBC-3.51.06.exe}

@item
In Windows Control Panel, select Administrative Tools | Data Source
(ODBC)

@item
In the User DSN tab, click Add.

@item
Select MySQL ODBC 3.51 Driver, click Finish.

@item
Fill in the form:

Data Source Name : Books

Host/Server Name : localhost

Database Name : books

User : <you>

Password : <blank>

@item
Click Ok.

@item
To run the Books unit test, repeat for a second data source named
'test', with database name 'test'.

@item
Click Ok.

@end enumerate

@node Create database, Compile Books, Install MyODBC, Install application
@subsection Create database

@enumerate 1
@item
Run @file{c:/Apps/MySQL/bin/winmysqladmin.exe}, to start the database
server. Note that this application minimizes to the system tray
immediately. To stop the server, right click on the system tray icon.

First create a user, then the database schema.

@item
In a bash shell, @emph{not} under Emacs:
@verbatim
cd Books/src
c:/Apps/MySQL/bin/mysql.exe -u root mysql
source create_user_mysql.sql;
quit;
c:/Apps/MySQL/bin/mysql.exe -u stephe
source create_database_books_mysql.sql;
source create_schema_mysql.sql;
quit;
@end verbatim

@item
To run the books unit tests, create the 'test' database:
@verbatim
cd Books/src
c:/Apps/MySQL/bin/mysql.exe -u stephe
source create_database_test_mysql.sql;
source create_schema_mysql.sql;
quit;
@end verbatim

@end enumerate

@node Compile Books,  , Create database, Install application
@subsection Compile Books
See @file{Books/INSTALL}

@node Program design, Database schema, Development Environment, Top
@chapter Program design

The user interface is written in Ada, using the GtkAda toolkit. I
don't use the GLADE GUI builder, partly because it doesn't write code
well under Windows 98 (my first build machine), but also because I don't
like the structure of the code it produces. I did use it to get ideas
about how to build the GUI.

The database interface is via ODBC 3.5, using the GNADE toolkit. Since
ODBC does not support defining the database schema, it must be built by
a database-specific tool. I use MySQL, so a MySQL script to create the
database schema is provided in src/create_schema_mysql.sql. In addition,
the user must have an account on the database server. An example MySQL
script to create an account is provided in src/create_user_mysql.sql.
This script also creates the user account needed by the GNADE odbc demo
program.

@node Database schema,  , Program design, Top
@chapter Database schema

The database holds four tables containing data, and three tables holding
links between the other tables. Each table has appropriate indexes.
Indexes on data tables have unique values.

The data tables, with their fields and indexes, are:

@table @samp
@item Author
Holds author names and IDs.

Fields:
@multitable {Field Name} {Field Type} {Size}
@item ID     @tab integer @tab 32 bit
@item First  @tab Text    @tab 20
@item Middle @tab Text    @tab 20
@item Last   @tab Text    @tab 20
@end multitable

Indexes:
@multitable {Index Name} {Index definition}
@item ID         @tab ID
@item Last Name  @tab +Last;+First;+Middle
@item Name  @tab +First;+Middle;+Last
@end multitable

@item Collection
Holds collection names, and a link to the collection author. A
collection is a single volume containing stories or novels. The 'author'
may have written all the stories, or just collected them in an
anthology.

Fields:
@multitable {Field Name} {Field Type} {Size}
@item ID     @tab integer @tab 32 bit
@item Name   @tab Text    @tab 50
@item Editor @tab Integer @tab 32 bit
@item Year   @tab Integer @tab 16 bit
@end multitable

Indexes:
@multitable {Index Name} {Index definition}
@item ID   @tab ID
@item Name @tab Name
@end multitable


@item Series
Holds series names, and a link to the series author. A series is a set
of related stories, normally all written by the same author.

Fields:
@multitable {Field Name} {Field Type} {Size}
@item ID     @tab integer @tab 32 bit
@item Title  @tab Text    @tab 50
@item Author @tab Integer @tab 32 bit
@end multitable

Indexes:
@multitable {Index Name} {Index definition}
@item ID    @tab ID
@item Title @tab Title
@end multitable

@item Title
Holds information on a single title (one story or novel).

Fields:
@multitable {Field Name} {Field Type} {Size}
@item ID      @tab integer @tab 32 bit
@item Title   @tab Text    @tab 50
@item Year    @tab Integer @tab 16 bit
@item Comment @tab Text    @tab 50
@item Rating  @tab Integer @tab 8 bit
@end multitable

Indexes:
@multitable {Index Name} {Index definition}
@item ID   @tab ID
@item Title Year @tab +Title;+Year
@end multitable

@end table

The link tables each hold two ids from two data tables, with an index on
each. Duplicates are allowed in these indexes. The link tables are
AuthorTitle, CollectionTitle, SeriesTitle. These tables list the authors
of the title, the collections the title appears in, and the series the
title is part of.

@bye
