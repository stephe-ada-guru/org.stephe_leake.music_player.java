@SET_MAKE@

PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@

# location of required programms
TAR = @TAR@
RM   = @RM@
prefix = @prefix@
datadir= @datadir@
datarootdir= @datarootdir@
srcdir = @srcdir@
lispdir= @lispdir@

SUBDIRS = lisp texinfo

EMACS_PROG = @EMACS_PROG@
EMACS_FLAVOR = @EMACS_FLAVOR@
EMACS_VERSION = @EMACS_VERSION@
INSTALL = @INSTALL@

##############################################################################
all: dvc info dvc-load.el dvc-load-install.el

Makefile: config.status $(srcdir)/Makefile.in
	./config.status $@

dvc-load.el: config.status $(srcdir)/dvc-load.el.in
	./config.status $@

dvc-load-install.el: config.status $(srcdir)/dvc-load-install.el.in
	./config.status $@

$(srcdir)/configure: $(srcdir)/configure.ac
	cd $(srcdir) ; autoconf
	./config.status --recheck

config.status: $(srcdir)/configure
	./config.status --recheck

info pdf dvi html:
	cd texinfo; $(MAKE) $@

dvc:
	cd lisp; $(MAKE)

dvc-verbose:
	cd lisp; $(MAKE) all-verbose

%-recursive:
	@for dir in $(SUBDIRS) ; do ( cd $$dir; $(MAKE) $* ) ; done

install: dvc-load.el install-recursive
	sed 's|$$(prefix)|$(prefix)|;s!$${datarootdir}!$(datarootdir)!' dvc-load-install.el \
	> ${lispdir}/dvc-load.el

uninstall: uninstall-recursive
	rmdir $(lispdir) || true

clean: clean-recursive
	$(RM) -f dvc-load.el dvc-load-install.el

distclean: clean distclean-recursive
	$(RM) -rf configure config.status config.log autom4te.cache/ Makefile

##############################################################################
distdir		= $(PACKAGE_TARNAME)-$(PACKAGE_VERSION)

lispfiles	= lisp/Makefile.in lisp/dvc-site.el.in \
		  lisp/contrib/*.el lisp/tests/*.el lisp/*.el
docfiles	= texinfo/Makefile.in texinfo/dvc.texinfo texinfo/dvc.info
miscfiles	= Makefile.in COPYING INSTALL* install-sh move-if-change \
		  dvc-load.el.in dvc-load-install.el.in \
		  lisp/dvc-version.el \
		  texinfo/dvc-version.texinfo \
		  configure.ac configure
extradist	=

distfiles = $(lispfiles) $(docfiles) $(miscfiles) $(extradist)

dist:
	$(RM) -rf $(distdir) $(distdir).tar.gz
	mkdir $(distdir)
	build=`pwd` ; dd=$$build/$(distdir) ; cd $(srcdir) ;	\
	for f in $(distfiles) ; do d='.' ;			\
	  if [ -f $$build/$$f ] ; then d=$$build ; fi ;		\
	  e=`dirname $$f` ; f=`basename $$f` ;			\
	  test -d $$dd/$$e || mkdir -p $$dd/$$e ;		\
	  cp -p $$d/$$e/$$f $$dd/$$e/$$f ; done
	$(TAR) cf - $(distdir) | gzip --best > $(distdir).tar.gz
	$(RM) -rf $(distdir)

tarball:
	$(MAKE) dist				\
	  distdir=$(PACKAGE_TARNAME)-snapshot	\
	  extradist='debian/* docs/* scripts/*'
