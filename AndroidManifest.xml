<?xml version="1.0" encoding="utf-8"?>

<!-- Copyright (C) 2011 Stephen Leake stephen_leake@stephe-leake.org

This application is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License as
published by the Free Software Foundation; either version 3, or (at
your option) any later version.

This application is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with GCC; see the file COPYING3.  If not see
<http://www.gnu.org/licenses/>.

-->

<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          package="org.stephe_leake.android.music_player"
          android:versionCode="1"
          android:versionName="1.0">
  <uses-sdk android:minSdkVersion="10" />

  <uses-permission android:name="android.permission.WRITE_SETTINGS" /> <!-- preferences -->
  <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
  <uses-permission android:name="android.permission.WAKE_LOCK" />
  <uses-permission android:name="android.permission.READ_PHONE_STATE" /> <!-- pause for phone call -->
  <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /> <!-- edit playlists -->
  <uses-permission android:name="android.permission.BROADCAST_STICKY" /> <!-- FIXME: why? -->

  <application 
      android:icon="@drawable/icon" 
      android:label="@string/app_name">

    <!-- We use "singleTask" to make it easier for the user to quit
         all instances. An alternative would be to use "standard" and
         exit each instance in onPause. But that would be a race
         condition with waiting for the service connection, and with
         waiting for the media scanner. -->
    <activity android:name=".Stephes_Music_PlayerActivity"
              android:label="@string/app_name"
              android:taskAffinity=""
              android:launchMode="singleTask">
      <intent-filter>
        <action android:name="android.intent.action.MAIN" />
        <category android:name="android.intent.category.LAUNCHER" />
      </intent-filter>
      <intent-filter>
        <action android:name="android.intent.action.VIEW" />
        <category android:name="android.intent.category.DEFAULT" />
        
        <!-- We should only list types that the music player we are
             using can actually play. But we don't know what the music
             player is, so we don't know what the correct list is. So
             we use audio/*, and return an error at runtime if it is
             not supported. -->
        <data android:mimeType="audio/*" android:scheme="file" />
      </intent-filter>
    </activity>

    <service android:name="org.stephe_leake.android.music_player.Stephes_Music_Service"
             android:exported="false" />

    <receiver android:name="org.stephe_leake.android.music_player.MediaAppWidgetProvider">
      <intent-filter>
        <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
      </intent-filter>
      <meta-data android:name="android.appwidget.provider" android:resource="@xml/appwidget_info" />

    </receiver>
    <receiver android:name="org.stephe_leake.android.music_player.MediaButtonIntentReceiver">
      <intent-filter>
        <action android:name="android.intent.action.MEDIA_BUTTON" />
        <action android:name="android.media.AUDIO_BECOMING_NOISY" />
      </intent-filter>
    </receiver>
  </application>
</manifest>
